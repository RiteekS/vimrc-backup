" Golang syntax highlighting
filetype off
filetype plugin indent off
set rtp+=$GOROOT/misc/vim
filetype plugin indent on
syntax on

set number
set autoread
set autoindent
set nowrap
syntax enable
syntax on 
set tabstop=4
set softtabstop=4
set expandtab
set showcmd
set shiftwidth=4

set backspace=2 " make backspace work like most other programs
set backspace=indent,eol,start


"This is for the search
:set ignorecase
:set smartcase

"This is for copying into the clipboard
map <C-c> "+y<CR>

set cursorline
" colorscheme molokai
" colorscheme apprentice
set wildmenu

set relativenumber
set incsearch
set hlsearch
set foldenable
set foldlevelstart=10

execute pathogen#infect()
set nocompatible
filetype plugin indent on
" autocmd Colorscheme * highlight FoldColumn guifg=bg guibg=bg

"  NerdTree
" start vim when no input mentioned
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
nmap <C-n> :NERDTreeToggle<CR>
:nnoremap <C-g> :NERDTree<CR>
" map <C-m> :NERDTreeFind<CR>

set undofile
set undodir=~/.vim/backup/undo
set undolevels=9999
set undoreload=9999

set wildignore+=*/tmp/*,*.swp,*.zip,*/vendor/*,.DS_Store,.git

" noremap <UP> <NOP>
"noremap <Down> <NOP>
"noremap <Left> <NOP>
"noremap <Right> <NOP>


" Vundle configure and load all plugins from vundlerc file: begin
set rtp+=~/.vim/bundle/Vundle.vim
set runtimepath^=~/.vim/bundle/ctrlp.vim

call vundle#begin()

:so ~/.vim/.vundlerc

call vundle#end()
filetype plugin indent on
set statusline=%t%c,%l/%L

let mapleader="\<Space>"
" nnoremap <Leader>f :NERDTreeFind<cr>

let g:ctrlp_open_new_file = 'r'
let g:ctrlp_show_hidden = 1
let g:go_fmt_command = "goimports"

" Highlight
let g:go_highlight_functions = 1  
let g:go_highlight_methods = 1  
let g:go_highlight_structs = 1  
let g:go_highlight_operators = 1  
let g:go_highlight_build_constraints = 1  

noremap <Leader>tt :call Toggle_task_status()<CR>
if !empty($MY_RUBY_HOME)
    let g:ruby_path = join(split(glob($MY_RUBY_HOME.'/lib/ruby/*.*')."\n".glob($MY_RUBY_HOME.'/lib/rubysite_ruby/*'),"\n"),',')
endif

let g:neocomplete#enable_at_startup = 1

" Called once right before you start selecting multiple cursors
function! Multiple_cursors_before()
    if exists(':NeoCompleteLock')==2
        exe 'NeoCompleteLock'
    endif
endfunction

" Called once only when the multiple selection is canceled (default <Esc>)
function! Multiple_cursors_after()
    if exists(':NeoCompleteUnlock')==2
        exe 'NeoCompleteUnlock'
    endif
endfunction

" This is for automatic linting
set rtp+=$GOPATH/src/github.com/golang/lint/misc/vim
autocmd BufWritePost,FileWritePost *.go execute 'Lint' | cwindow

"This is for tagbar
let g:tagbar_type_go = {  
    \ 'ctagstype' : 'go',
    \ 'kinds'     : [
        \ 'p:package',
        \ 'i:imports:1',
        \ 'c:constants',
        \ 'v:variables',
        \ 't:types',
        \ 'n:interfaces',
        \ 'w:fields',
        \ 'e:embedded',
        \ 'm:methods',
        \ 'r:constructor',
        \ 'f:functions'
    \ ],
    \ 'sro' : '.',
    \ 'kind2scope' : {
        \ 't' : 'ctype',
        \ 'n' : 'ntype'
    \ },
    \ 'scope2kind' : {
        \ 'ctype' : 't',
        \ 'ntype' : 'n'
    \ },
    \ 'ctagsbin'  : 'gotags',
    \ 'ctagsargs' : '-sort -silent'
    \ }
nmap <F8> :TagbarToggle<CR>


